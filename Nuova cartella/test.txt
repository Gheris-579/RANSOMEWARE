from cryptography.fernet import Fernet

# Generate a random encryption key
encryption_key = Fernet.generate_key()

# Initialize the Fernet object with the encryption key
cipher_suite = Fernet(encryption_key)

def encrypt_task(task):
    # Convert task to bytes
    task_bytes = bytes(task, 'utf-8')
    
    # Encrypt the task
    encrypted_task = cipher_suite.encrypt(task_bytes)
    
    return encrypted_task

def decrypt_task(encrypted_task):
    # Decrypt the task
    decrypted_task = cipher_suite.decrypt(encrypted_task)
    
    # Convert bytes to string
    task = decrypted_task.decode('utf-8')
    
    return task

def add_task(tasks, task):
    # Encrypt the task
    encrypted_task = encrypt_task(task)
    
    # Add the encrypted task to the tasks list
    tasks.append(encrypted_task)

def remove_task(tasks, task_index):
    # Remove the task from the tasks list
    tasks.pop(task_index)

def print_tasks(tasks):
    # Iterate over the tasks list
    for i, encrypted_task in enumerate(tasks):
        # Decrypt and print each task
        task = decrypt_task(encrypted_task)
        print(f'{i + 1}. {task}')

def main():
    tasks = []
    
    while True:
        # Prompt the user for options
        print('1. Add task')
        print('2. Remove task')
        print('3. Print tasks')
        print('4. Exit')
        
        choice = input('Choose an option (1-4): ')
        
        if choice == '1':
            task = input('Enter task: ')
            add_task(tasks, task)
        elif choice == '2':
            print_tasks(tasks)
            task_index = int(input('Enter task number to remove: ')) - 1
            remove_task(tasks, task_index)
        elif choice == '3':
            print_tasks(tasks)
        elif choice == '4':
            break
        else:
            print('Invalid choice. Please try again.')

if __name__ == '__main__':
    main()